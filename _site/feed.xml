<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-06-04T00:06:35+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">스케치용녹색물감</title><subtitle>I want to comunicate someone</subtitle><author><name>Your Name</name></author><entry><title type="html">GithubBlog(3)</title><link href="http://localhost:4000/yongrok/update/GithubBlog(3)/" rel="alternate" type="text/html" title="GithubBlog(3)" /><published>2023-06-03T12:45:29+09:00</published><updated>2023-06-03T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/GithubBlog(3)</id><content type="html" xml:base="http://localhost:4000/yongrok/update/GithubBlog(3)/"><![CDATA[<h1 id="github-로컬-서버에서-실행시키기">GITHUB 로컬 서버에서 실행시키기</h1>

<p>깃허브 블로그를 계속 작성은 했었다. 그런데 서버에 올라가지 않는다. 귀찮아서 오류 해결을 하지 않았었다. 오늘 끝내주마 껄껄</p>

<h1 id="정리">정리</h1>
<h2 id="gemfile이라는-파일에-아래-네-줄-추가">Gemfile이라는 파일에 아래 네 줄 추가</h2>
<p>gem ‘jekyll-paginate’
gem ‘jekyll-sitemap’
gem ‘jekyll-gist’
gem ‘jekyll-include-cache’</p>

<h2 id="아래-갱신서버실행-명령어-입력">아래 갱신/서버실행 명령어 입력</h2>
<p>bundle install
bundle exec jekyll serve</p>

<h1 id="로컬-서버-실행">로컬 서버 실행</h1>
<p>깃허브 블로그는 Jekyll이라는 정적 사이트 생성기를 사용합니다. 따라서 Jekyll을 설치해야 합니다. Ruby와 RubyGems가 미리 설치되어 있어야 합니다. 설치되어 있지 않다면 해당 도구를 먼저 설치해야 합니다.</p>

<h2 id="ruby와-rubygems가-설치되었다면-다음-명령어를-사용하여-jekyll과-관련된-종속성을-설치합니다">Ruby와 RubyGems가 설치되었다면, 다음 명령어를 사용하여 Jekyll과 관련된 종속성을 설치합니다:</h2>

<p>gem install bundler jekyll</p>

<h2 id="종속성-설치가-완료되면-다음-명령어를-사용하여-로컬-서버를-실행합니다">종속성 설치가 완료되면, 다음 명령어를 사용하여 로컬 서버를 실행합니다:</h2>

<p>bundle exec jekyll serve</p>

<h3 id="첫-번째-오류-발생">첫 번째 오류 발생</h3>
<p>Configuration file: /Users/kim-yongrok/Github_Blog/Grokeen.github.io/_config.yml
                    ————————————————
      Jekyll 4.3.1   Please append <code class="language-plaintext highlighter-rouge">--trace</code> to the <code class="language-plaintext highlighter-rouge">serve</code> command 
                     for any additional information or backtrace. 
                    ————————————————</p>

<p>이 에러는 _config.yml라는 파일에 문제가 있는 듯 싶다. ‘serve’ 뒤에 ‘–trace’를 붙여서 다시 해본다:</p>

<p>bundle exec jekyll serve –trace</p>

<h3 id="두번-째-오류-발생-어디서-부터-잘-못-된-걸까">두번 째 오류 발생, 어디서 부터 잘 못 된 걸까</h3>
<p>bundler: failed to load command: jekyll (/usr/local/bin/jekyll)</p>

<p>이 에러는 Bundler가 jekyll 명령어를 로드하지 못했음을 나타냅니다. Bundler는 프로젝트의 종속성을 관리하는 도구로서, Jekyll과 관련된 종속성을 올바르게 설치하고 로드해야 한다.</p>

<h4 id="bundler가-설치되어-있는지-확인합니다-bundler가-설치되어-있지-않다면-다음-명령어를-사용하여-설치합니다">Bundler가 설치되어 있는지 확인합니다. Bundler가 설치되어 있지 않다면 다음 명령어를 사용하여 설치합니다:</h4>

<p>sudo gem install bundler</p>

<h4 id="bundler를-사용하여-jekyll과-관련된-종속성을-설치합니다-깃허브-블로그-저장소의-루트-디렉토리예-userskim-yongrokgithub_bloggrokeengithubio로-이동한-후-다음-명령어를-실행합니다">Bundler를 사용하여 Jekyll과 관련된 종속성을 설치합니다. 깃허브 블로그 저장소의 루트 디렉토리(예: /Users/kim-yongrok/Github_Blog/Grokeen.github.io)로 이동한 후 다음 명령어를 실행합니다:</h4>

<p>bundle install</p>

<p>이 명령어는 Gemfile과 Gemfile.lock 파일을 기반으로 필요한 종속성을 설치합니다.</p>

<h4 id="설치가-완료되면-jekyll-명령어를-다시-실행해-봅니다">설치가 완료되면 jekyll 명령어를 다시 실행해 봅니다:</h4>

<p>bundle exec jekyll serve</p>

<h3 id="세번-째-오류-발생-아까랑-똑같지만-다른-에러">세번 째 오류 발생, 아까랑 똑같지만 다른 에러</h3>
<p>Your RubyGems version (3.0.3.1) has a bug that prevents <code class="language-plaintext highlighter-rouge">required_ruby_version</code> from working for Bundler. Any scripts that use <code class="language-plaintext highlighter-rouge">gem install bundler</code> will break as soon as Bundler drops support for your Ruby version. Please upgrade RubyGems to avoid future breakage and silence this warning by running <code class="language-plaintext highlighter-rouge">gem update --system 3.2.3</code></p>

<p>위 에러는 친절하게 다른 버전을 설치하는 방법을 알려준다:</p>

<p>sudo gem update –system 3.2.3</p>

<p>이후에 ‘bundle exec jekyll serve’를 다시 해준다.</p>

<h3 id="네번-째-오류-아놔-첫-번째-오류랑-같다ㅋ">네번 째 오류, 아놔 첫 번째 오류랑 같다.ㅋ</h3>
<p>Chat GPT의 힘을 빌렸다. 오류문을 스크랩해서 줬더니, 에러의 원인은 jekyll-4.3.1 버전의 jekyll/cache.rb 파일에서 발생한 것으로 보입니다. 더 구체적으로는 load 함수의 호출에서 dump format error가 발생하여 에러가 발생했다고 알려줬다.</p>

<h4 id="jekyll의-캐시를-삭제해-보세요-다음-명령어를-실행하여-jekyll의-캐시를-지웁니다">Jekyll의 캐시를 삭제해 보세요. 다음 명령어를 실행하여 Jekyll의 캐시를 지웁니다:</h4>

<p>bundle exec jekyll clean</p>

<h4 id="bundler를-사용하여-jekyll과-관련된-종속성을-다시-설치합니다-깃허브-블로그-저장소의-루트-디렉토리로-이동한-후-다음-명령어를-실행합니다">Bundler를 사용하여 Jekyll과 관련된 종속성을 다시 설치합니다. 깃허브 블로그 저장소의 루트 디렉토리로 이동한 후 다음 명령어를 실행합니다:</h4>

<p>bundle install</p>

<h4 id="위-단계를-마치면-다시-bundle-exec-jekyll-serve-명령을-실행해-보세요-새로운-캐시가-생성되며-문제가-해결되었을-것입니다">위 단계를 마치면 다시 bundle exec jekyll serve 명령을 실행해 보세요. 새로운 캐시가 생성되며 문제가 해결되었을 것입니다.</h4>

<p>bundle exec jekyll serve</p>

<h4 id="또한-만약-위-단계가-도움이-되지-않는다면-jekyll-및-bundler를-최신-버전으로-업데이트해-보는-것도-고려해-볼-수-있습니다-다음-명령어를-실행하여-최신-버전으로-업데이트할-수-있습니다">또한, 만약 위 단계가 도움이 되지 않는다면 Jekyll 및 Bundler를 최신 버전으로 업데이트해 보는 것도 고려해 볼 수 있습니다. 다음 명령어를 실행하여 최신 버전으로 업데이트할 수 있습니다:</h4>

<p>gem update jekyll bundler</p>

<h3 id="다섯-번-째-오류-발생-jekyll-paginate가-없다는-거-같은데">다섯 번 째 오류 발생, ‘jekyll-paginate’가 없다는 거 같은데</h3>
<p>Dependency Error: Yikes! It looks like you don’t have jekyll-paginate or one of its dependencies installed. In order to use Jekyll as currently configured, you’ll need to install this gem. If you’ve run Jekyll with <code class="language-plaintext highlighter-rouge">bundle exec</code>, ensure that you have included the jekyll-paginate gem in your Gemfile as well. The full error message from Ruby is: ‘cannot load such file – jekyll-paginate’ If you run into trouble, you can find helpful resources at https://jekyllrb.com/help/! 
                    ————————————————
      Jekyll 4.3.1   Please append <code class="language-plaintext highlighter-rouge">--trace</code> to the <code class="language-plaintext highlighter-rouge">serve</code> command 
                     for any additional information or backtrace. 
                    ————————————————</p>

<h4 id="gemfile을-열어서-jekyll-paginate-gem이-명시적으로-포함되어-있는지-확인">Gemfile을 열어서 jekyll-paginate gem이 명시적으로 포함되어 있는지 확인:</h4>

<p>find / -name Gemfile(비추)</p>

<p>회사에서 사용하던 방식으로 찾아봤는데 너무 많이 나온다…
아 확인해보니 github 블로그 하위 디렉토리에 저 파일이 존재했다.</p>

<h4 id="만약-없다면-gemfile라는-파일에서-가장-아래에-gem-jekyll-paginate-줄을-추가해라">만약 없다면, Gemfile라는 파일에서 가장 아래에 gem ‘jekyll-paginate’ 줄을 추가해라:</h4>

<p>gem ‘jekyll-paginate’</p>

<h4 id="다시-bundle-install-명령을-실행하여-종속성을-설치한다">다시 bundle install 명령을 실행하여 종속성을 설치한다:</h4>

<p>bundle install</p>

<h4 id="bundle-exec-jekyll-serve-명령을-실행하여-jekyll을-다시-시작">bundle exec jekyll serve 명령을 실행하여 Jekyll을 다시 시작.</h4>

<p>bundle exec jekyll serve</p>

<h3 id="여섯-번-째-오류-발생-도루마무인가-첫번-째-오류-발생">여섯 번 째 오류 발생, 도루마무인가… 첫번 째 오류 발생</h3>
<p>Configuration file: /Users/kim-yongrok/Github_Blog/Grokeen.github.io/_config.yml
  Dependency Error: Yikes! It looks like you don’t have jekyll-sitemap or one of its dependencies installed. In order to use Jekyll as currently configured, you’ll need to install this gem. If you’ve run Jekyll with <code class="language-plaintext highlighter-rouge">bundle exec</code>, ensure that you have included the jekyll-sitemap gem in your Gemfile as well. The full error message from Ruby is: ‘cannot load such file – jekyll-sitemap’ If you run into trouble, you can find helpful resources at https://jekyllrb.com/help/! 
                    ————————————————
      Jekyll 4.3.1   Please append <code class="language-plaintext highlighter-rouge">--trace</code> to the <code class="language-plaintext highlighter-rouge">serve</code> command 
                     for any additional information or backtrace. 
                    ————————————————</p>

<p>이번엔 뭔 sitemap 이라는 녀석이다. 다시 반복해본다.</p>

<h4 id="gemfile라는-파일에서-가장-아래에-gem-jekyll-paginate-줄을-추가해라">Gemfile라는 파일에서 가장 아래에 gem ‘jekyll-paginate’ 줄을 추가해라:</h4>

<p>gem ‘jekyll-sitemap’</p>

<h4 id="다시-bundle-install-명령을-실행하여-종속성을-설치한다-1">다시 bundle install 명령을 실행하여 종속성을 설치한다:</h4>

<p>bundle install</p>

<h4 id="bundle-exec-jekyll-serve-명령을-실행하여-jekyll을-다시-시작-1">bundle exec jekyll serve 명령을 실행하여 Jekyll을 다시 시작.</h4>

<p>bundle exec jekyll serve</p>

<h3 id="여섯-번-째-오류-발생-이번에-jekyll-gist-이-녀석-고지가-눈-앞이다">여섯 번 째 오류 발생. 이번에 jekyll-gist 이 녀석… 고지가 눈 앞이다:</h3>

<p>gem ‘jekyll-gist’ 추가</p>

<p>bundle install
bundle exec jekyll serve</p>

<h3 id="일곱-번-째-오류-발생-jekyll-include-cache-도루마무-이-자식-처음부터-알려-주던가">일곱 번 째 오류 발생. jekyll-include-cache 도루마무 이 자식 처음부터 알려 주던가…</h3>

<p>gem ‘jekyll-include-cache’ 추가</p>

<p>bundle install
bundle exec jekyll serve</p>

<h3 id="여덟-번-째-오류-발생-오-성과가-있다-다른-애러가-발생했다">여덟 번 째 오류 발생. 오 성과가 있다. 다른 애러가 발생했다.</h3>
<p>내가 작성한 마크 다운 중에 날짜 문제가 있다고 한다.
2022-12-0\28 라고 적어 놨는데 \가 문제인 거 같다.
마크다운 처음을 대부분 복붙으로 해놨더니 생각보다 많은 파일을 저렇게 작성했었다.</p>

<p>모두 수정 완료….</p>

<p>왓더 뻐어어어어어어어억 
성공했다!!!!!</p>

<h2 id="로컬-서버가-실행되면-커맨드-라인에-서버가-실행-중인-주소http1270014000-또는-httplocalhost4000가-표시된다">로컬 서버가 실행되면 커맨드 라인에 서버가 실행 중인 주소(http://127.0.0.1:4000 또는 http://localhost:4000)가 표시된다.</h2>
<p>웹 브라우저에서 해당 주소를 열면 깃허브 블로그가 로컬 서버에서 실행되는 것을 확인할 수 있다:</p>

<p>http://localhost:4000</p>

<h3 id="하-또-오류냐-페이지가-안-보인다">하 또 오류냐 페이지가 안 보인다.</h3>
<h4 id="첫-번째-오류-발생-error-faviconico-not-found">첫 번째 오류 발생, ERROR `/favicon.ico’ not found.</h4>
<p>간단히 새로운 파일 만들고 ‘favicon.ico’로 이름을 바꿔줬다. 다시 로컬서버로 접속해보니 오류는 없다. 그러나 아무 화면이 안 나온다.</p>

<p>index.html 내부에 경로 지정이라도 해줘야 하나? 개꿀잼 몰카가 아닌가 싶다.</p>

<h4 id="두-번째-오류-발생-option--command--i">두 번째 오류 발생, Option + Command + I</h4>
<p>[Error] Failed to load resource: You do not have permission to access the requested resource.</p>

<p>단축키로 브라우저(맥북 사파리)에 오류 확인하려고 보니까 소스를 엑세스 할 권한이 없다는데? 지랄도 병이다.</p>

<p>Option + Command + E</p>

<p>로 캐시를 삭제 시켜줘 봤다. 추가적으로 모든 브라우저를 종료했다.</p>

<h4 id="세-번째-오류-발생-갑자기-로그에-애플-뭐시기-발생">세 번째 오류 발생, 갑자기 로그에 애플 뭐시기 발생</h4>
<p>[2023-06-03 16:37:01] ERROR <code class="language-plaintext highlighter-rouge">/apple-touch-icon-precomposed.png' not found.
[2023-06-03 16:37:01] ERROR </code>/apple-touch-icon.png’ not found.</p>

<p>이건 사파리 이것 저것 누르니까 자동으로 사라졌다. 크롬에서 돌려봤는데 똑같이 아무 화면이 안 나오고 오류 문도 없다.</p>

<h4 id="네-번째-오류-발생-알아-버렸다-노란-글씨로-나와서-에러가-아닌-줄-알았다">네 번째 오류 발생, 알아 버렸다. 노란 글씨로 나와서 에러가 아닌 줄 알았다.</h4>
<p>Build Warning: Layout ‘post’ requested in _posts/2022-12-06-welcome-to-jekyll.md does not exist.</p>

<p>이런 식으로 에러가 나온다.</p>

<p>예를 들어
‘—
layout: post
title:  “Github Blog(3)”
date:   2023-06-03 12:45:29 +0900
categories: person update
—’
각 마크다운 마다 ‘2023-06-03-GithubBlog(3).md’ 제목과 날짜와 내부에 작성한 제목과 날짜가 달라서 난 거 같아 노가다로 수정해줬다. 
실패 1, 여전히 오류가 발생한다.</p>

<p>혹시 몰라 /GithubBlog/_Layout 이라는 디렉토리를 만들고, post,home,default 등 추가 하위 디렉토리를 만들어 줬다. 
실패 2, 서버 재시작 해도 똑같다.</p>

<p>아. 알았다. 서버는 정상적으로 실행 중인게 맞다. /GithubBlog/index.html과 index.md 를 수정하면 흰 화면에 반영된다. 아까 서버 실행을 위해 _config.yml 파일이 리셋됐나 보다.</p>

<p>####</p>]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[GITHUB 로컬 서버에서 실행시키기]]></summary></entry><entry><title type="html">Java(2)</title><link href="http://localhost:4000/yongrok/update/Java(2)/" rel="alternate" type="text/html" title="Java(2)" /><published>2023-05-25T12:45:29+09:00</published><updated>2023-05-25T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/Java(2)</id><content type="html" xml:base="http://localhost:4000/yongrok/update/Java(2)/"><![CDATA[<h1 id="윈도우-이클립스에-스프링-프로젝트-옮기기-2-db를-옮겨보자">윈도우 이클립스에 스프링 프로젝트 옮기기 2. DB를 옮겨보자.</h1>
<p>Mac에서 Oracle 데이터베이스를 설치하고 설정하는 방법은 다음과 같습니다:</p>

<h2 id="oracle-홈페이지에서-다운로드">Oracle 홈페이지에서 다운로드:</h2>
<p>맥에서 Oracle 데이터베이스를 설치하려면 Oracle 홈페이지(https://www.oracle.com/database/technologies/oracle-database-software-downloads.html)에 접속하여 다운로드 페이지로 이동합니다.
“Oracle Database” 섹션에서 원하는 버전의 Oracle 데이터베이스를 선택합니다.
주로 “Oracle Database Express Edition (XE)” 또는 “Standard Edition 2” 버전을 사용합니다.
해당 버전에 대한 macOS 용 설치 파일을 다운로드합니다.</p>

<h2 id="설치">설치:</h2>
<p>다운로드한 설치 파일을 실행하여 Oracle 데이터베이스 설치 마법사를 시작합니다.
마법사의 지시에 따라 설치 옵션을 선택합니다. 일반적으로 기본 옵션을 그대로 사용할 수 있습니다.</p>

<h2 id="데이터베이스-구성">데이터베이스 구성:</h2>
<p>설치가 완료되면 터미널을 열고 sqlplus 명령어를 실행하여 SQL*Plus 클라이언트를 실행합니다. 이를 통해 데이터베이스에 연결할 수 있습니다.</p>

<h2 id="sys-사용자로-로그인하려면-다음과-같은-명령을-실행합니다">sys 사용자로 로그인하려면 다음과 같은 명령을 실행합니다:</h2>
<p>sqlplus sys as sysdba
패스워드를 설정하고, 데이터베이스의 이름, 포트 등의 구성을 진행합니다.</p>

<h2 id="데이터베이스-시작-및-정지">데이터베이스 시작 및 정지:</h2>
<p>Oracle 데이터베이스를 시작하려면 다음 명령을 실행합니다:
csharp</p>

<p>SQL&gt; 
startup</p>

<h2 id="데이터베이스를-정지하려면-다음-명령을-실행합니다">데이터베이스를 정지하려면 다음 명령을 실행합니다:</h2>
<p>arduino</p>

<p>SQL&gt; 
shutdown</p>

<h2 id="sql-developer-설치선택-사항">SQL Developer 설치(선택 사항):</h2>
<p>Oracle 데이터베이스와 상호 작용하기 위해 Oracle SQL Developer를 설치할 수 있습니다. 
SQL Developer는 데이터베이스 관리 및 쿼리 도구로 사용됩니다.
Oracle 홈페이지(https://www.oracle.com/tools/downloads/sqldev-downloads.html)에서 SQL Developer를 다운로드하고 설치합니다.</p>

<p>위 단계를 따라하면 맥에서 Oracle 데이터베이스를 설치하고 설정할 수 있습니다. 
Oracle 데이터베이스는 기업 환경에서 많이 사용되며, 많은 기능과 유연성을 제공합니다. 설정 및 관리에는 일정한 경험이 필요할 수 있으므로, 설치 및 구성에 어려움을 겪는다면 Oracle 공식 문서와 관련 가이드를 참조하는 것이 좋습니다.</p>]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[윈도우 이클립스에 스프링 프로젝트 옮기기 2. DB를 옮겨보자. Mac에서 Oracle 데이터베이스를 설치하고 설정하는 방법은 다음과 같습니다:]]></summary></entry><entry><title type="html">Tableau</title><link href="http://localhost:4000/yongrok/update/Tableau(1)/" rel="alternate" type="text/html" title="Tableau" /><published>2023-05-25T12:45:29+09:00</published><updated>2023-05-25T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/Tableau(1)</id><content type="html" xml:base="http://localhost:4000/yongrok/update/Tableau(1)/"><![CDATA[<h1 id="tableau란-무었인가">Tableau란 무었인가</h1>

<p>Tableau는 데이터 시각화 및 비즈니스 인텔리전스 도구로, 데이터를 시각적으로 탐색, 분석 및 공유할 수 있게 해주는 강력한 플랫폼입니다.</p>

<h1 id="tableau를-사용하여-다음과-같은-작업을-수행할-수-있습니다">Tableau를 사용하여 다음과 같은 작업을 수행할 수 있습니다:</h1>

<h2 id="데이터-연결">데이터 연결:</h2>
<p>Tableau는 다양한 데이터 소스와 연결할 수 있습니다. Excel, CSV, 데이터베이스, 웹 서비스 등 다양한 형식의 데이터를 연결하여 사용할 수 있습니다. 또한 Tableau의 데이터 연결 기능을 사용하여 데이터를 실시간으로 업데이트하거나 예약된 일정에 따라 자동으로 갱신할 수도 있습니다.</p>

<h2 id="시각화-작성">시각화 작성:</h2>
<p>Tableau는 사용자 친화적인 인터페이스를 제공하여 데이터를 시각적으로 탐색하고 인터랙티브한 시각화를 작성할 수 있습니다. 차트, 그래프, 맵, 대시보드 등 다양한 시각화 요소를 활용하여 데이터를 직관적으로 이해할 수 있습니다. 또한 드래그 앤 드롭 기능을 사용하여 시각화를 손쉽게 구성할 수 있습니다.</p>

<h2 id="필터링-및-조건-설정">필터링 및 조건 설정:</h2>
<p>Tableau를 사용하여 데이터를 필터링하고 원하는 조건에 따라 데이터를 제한할 수 있습니다. 이를 통해 특정 기간, 범주, 지역 등에 대한 데이터를 분석할 수 있습니다. 조건 설정을 통해 데이터를 동적으로 변경하거나 사용자의 입력에 따라 결과를 조정할 수도 있습니다.</p>
<h2 id="계산-및-함수-사용">계산 및 함수 사용:</h2>
<p>Tableau는 다양한 계산 및 함수를 사용하여 데이터를 가공하고 분석할 수 있습니다. 예를 들어, 총합, 평균, 백분율, 성장율 등을 계산하거나 사용자 정의 함수를 작성하여 특정 계산을 수행할 수 있습니다.</p>

<h2 id="대시보드-및-스토리-작성">대시보드 및 스토리 작성:</h2>
<p>Tableau를 사용하여 대시보드를 작성하고 데이터의 핵심 인사이트를 시각적으로 표현할 수 있습니다. 여러 시각화 요소를 조합하여 통합된 대시보드를 만들거나 시각적 스토리텔링을 통해 데이터의 이야기를 전달할 수 있습니다.</p>

<h1 id="tableau를-사용하기-위해서는-다음과-같은-학습-및-실습이-필요합니다">Tableau를 사용하기 위해서는 다음과 같은 학습 및 실습이 필요합니다:</h1>

<h2 id="tableau-학습-자료">Tableau 학습 자료:</h2>
<p>Tableau의 공식 문서, 온라인 튜토리얼, 학습 비디오 등의 자료를 활용하여 기본 개념과 기능을 익힐 수</p>]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[Tableau란 무었인가]]></summary></entry><entry><title type="html">Java(1)</title><link href="http://localhost:4000/yongrok/update/Java(1)/" rel="alternate" type="text/html" title="Java(1)" /><published>2023-05-24T12:45:29+09:00</published><updated>2023-05-24T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/Java(1)</id><content type="html" xml:base="http://localhost:4000/yongrok/update/Java(1)/"><![CDATA[<h1 id="윈도우-이클립스에-스프링-프로젝트-옮기기-1-맥북-vscode에서-자바-spring-실행-및-설치-방법">윈도우 이클립스에 스프링 프로젝트 옮기기 1. 맥북 vscode에서 자바 Spring 실행 및 설치 방법</h1>

<h1 id="1-아래-링크-클릭하여-자바-설치">1. 아래 링크 클릭하여 자바 설치</h1>
<p>https://www.java.com/en/download/</p>

<h1 id="2-vs-code-설치">2. VS Code 설치:</h1>
<p>맥 앱 스토어 또는 Visual Studio Code 공식 웹 사이트(https://code.visualstudio.com/)에서 VS Code를 다운로드하고 설치합니다.</p>

<h1 id="3-vs-code에-java-extension-pack-설치">3. VS Code에 Java Extension Pack 설치:</h1>
<p>VS Code를 열고 좌측 사이드바의 Extensions(확장) 아이콘을 클릭합니다.
검색 상자에 “Java Extension Pack”을 입력하고 해당 확장을 찾아 설치합니다.
Java Extension Pack은 Java 개발을 위한 필수 도구 및 확장을 제공합니다.</p>

<h1 id="4-spring-boot-프로젝트-생성">4. Spring Boot 프로젝트 생성:</h1>
<p>터미널에서 Spring Boot 프로젝트를 생성할 디렉토리로 이동합니다.</p>
<h2 id="다음-명령을-실행하여-spring-initializr를-사용하여-프로젝트를-생성합니다">다음 명령을 실행하여 Spring Initializr를 사용하여 프로젝트를 생성합니다:</h2>
<ul>
  <li>curl https://start.spring.io/starter.zip -o Spring_Project_Factory.zip</li>
  <li>파일에 압축 풀기 : unzip Spring_Project_Factory.zip -d Spring_Project_Factory</li>
  <li>현재 디렉토리에 압축풀기 : unzip Spring_Project_Factory.zip</li>
  <li>cd Spring_Project_Factory</li>
</ul>

<h1 id="5-프로젝트를-vs-code에서-열기">5. 프로젝트를 VS Code에서 열기:</h1>
<p>터미널에서 다음 명령을 실행하여 VS Code에서 프로젝트를 엽니다:
code .</p>

<h1 id="6-vs-code에서-spring-boot-개발">6. VS Code에서 Spring Boot 개발:</h1>
<p>VS Code의 왼쪽 사이드바에서 프로젝트 폴더 구조를 확인하고, Java 파일이나 리소스 파일을 엽니다.
Spring Boot 애플리케이션을 개발하고, 코드 편집, 디버깅 등의 작업을 수행합니다.</p>

<p>위 단계를 따라 맥북에서 VS Code에서 Spring을 사용할 수 있습니다. 또한 VS Code의 Java Extension Pack은 Spring 개발을 위한 추가 기능과 도구를 제공하기 때문에 개발 작업을 보다 효율적으로 수행할 수 있습니다.</p>]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[윈도우 이클립스에 스프링 프로젝트 옮기기 1. 맥북 vscode에서 자바 Spring 실행 및 설치 방법]]></summary></entry><entry><title type="html">markdown(2)</title><link href="http://localhost:4000/yongrok/update/markdown(2)/" rel="alternate" type="text/html" title="markdown(2)" /><published>2023-05-24T12:45:29+09:00</published><updated>2023-05-24T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/markdown(2)</id><content type="html" xml:base="http://localhost:4000/yongrok/update/markdown(2)/"><![CDATA[<!--

[공통] 마크다운 markdown 작성법
======================

> 영어지만, 조금 더 상세하게 마크다운 사용법을 안내하고 있는    
> "Markdown Guide (https://www.markdownguide.org/)" 를 보시는 것을 추천합니다. ^^

> 아, 그리고 마크다운만으로 표현이 부족하다고 느끼신다면, HTML 태그를 활용하시는 것도 좋습니다.


# 1. 마크다운에 관하여
## 1.1. 마크다운이란?
[**Markdown**](https://www.markdownguide.org/getting-started/)은 텍스트 기반의 마크업언어로 2004년 존그루버에 의해 만들어졌으며 쉽게 쓰고 읽을 수 있으며 HTML로 변환이 가능하다. 특수기호와 문자를 이용한 매우 간단한 구조의 문법을 사용하여 웹에서도 보다 빠르게 컨텐츠를 작성하고 보다 직관적으로 인식할 수 있다.
마크다운이 최근 각광받기 시작한 이유는 깃헙([https://github.com](https://github.com)) 덕분이다. 깃헙의 저장소Repository에 관한 정보를 기록하는 README.md는 깃헙을 사용하는 사람이라면 누구나 가장 먼저 접하게 되는 마크다운 문서였다. 마크다운을 통해서 설치방법, 소스코드 설명, 이슈 등을 간단하게 기록하고 가독성을 높일 수 있다는 강점이 부각되면서 점점 여러 곳으로 퍼져가게 된다.

## 1.2. 마크다운의 장-단점
### 1.2.1. 장점
	1. 간결하다.
	2. 별도의 도구없이 작성가능하다.
	3. 다양한 형태로 변환이 가능하다.
	4. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.
	5. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.
	6. 지원하는 프로그램과 플랫폼이 다양하다.

### 1.2.2. 단점
	1. 표준이 없다.
	2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.
	3. 모든 HTML 마크업을 대신하지 못한다.

****
# 2. 마크다운 사용법(문법)
## 2.1. 헤더Headers
* 큰제목: 문서 제목
    ```
    This is an H1
    =============
    ```
    This is an H1
    =============

* 작은제목: 문서 부제목
    ```
    This is an H2
    -------------
    ```
    This is an H2
    -------------

* 글머리: 1~6까지만 지원
```
# This is a H1
## This is a H2
### This is a H3
#### This is a H4
##### This is a H5
###### This is a H6
```
# This is a H1
## This is a H2
### This is a H3
#### This is a H4
##### This is a H5
###### This is a H6
####### This is a H7(지원하지 않음)

## 2.2. BlockQuote
이메일에서 사용하는 ```>``` 블럭인용문자를 이용한다.
```
> This is a first blockqute.
>	> This is a second blockqute.
>	>	> This is a third blockqute.
```
> This is a first blockqute.
>	> This is a second blockqute.
>	>	> This is a third blockqute.

이 안에서는 다른 마크다운 요소를 포함할 수 있다.
> ### This is a H3
> * List
>	```
>	code
>	```

## 2.3. 목록
### ● 순서있는 목록(번호)
순서있는 목록은 숫자와 점을 사용한다.
```
1. 첫번째
2. 두번째
3. 세번째
```
1. 첫번째
2. 두번째
3. 세번째

**현재까지는 어떤 번호를 입력해도 순서는 내림차순으로 정의된다.**
```
1. 첫번째
3. 세번째
2. 두번째
```
1. 첫번째
3. 세번째
2. 두번째

딱히 개선될 것 같지는 않다. 존 그루버가 신경안쓰고 있다고...

### ● 순서없는 목록(글머리 기호: `*`, `+`, `-` 지원)
```
* 빨강
  * 녹색
    * 파랑

+ 빨강
  + 녹색
    + 파랑

- 빨강
  - 녹색
    - 파랑
```
* 빨강
  * 녹색
    * 파랑

+ 빨강
  + 녹색
    + 파랑

- 빨강
  - 녹색
    - 파랑

혼합해서 사용하는 것도 가능하다(내가 선호하는 방식)

```
* 1단계
  - 2단계
    + 3단계
      + 4단계
```

* 1단계
  - 2단계
    + 3단계
      + 4단계

## 2.4. 코드
4개의 공백 또는 하나의 탭으로 들여쓰기를 만나면 변환되기 시작하여 들여쓰지 않은 행을 만날때까지 변환이 계속된다.

### 2.4.1. 들여쓰기
```
This is a normal paragraph:

    This is a code block.
    
end code block.
```

실제로 적용해보면,

적용예:

*****
This is a normal paragraph:

    This is a code block.

end code block.
*****

> 한줄 띄어쓰지 않으면 인식이 제대로 안되는 문제가 발생합니다.

```
This is a normal paragraph:
    This is a code block.
end code block.
```

적용예:

*****
This is a normal paragraph:
    This is a code block.
end code block.
*****

### 2.4.1. 코드블럭
코드블럭은 다음과 같이 2가지 방식을 사용할 수 있습니다:

* `<pre><code>{code}</code></pre>` 이용방식

```
<pre>
<code>
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println("Hello, Honeymon");
  }

}
</code>
</pre>
```

<pre>
<code>
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println("Hello, Honeymon");
  }
}
</code>
</pre>

* 코드블럭코드("\```") 을 이용하는 방법

<pre>
<code>
```
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println("Hello, Honeymon");
  }
}
```
</code>
</pre>

```
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println("Hello, Honeymon");
  }
}
```

**깃헙**에서는 코드블럭코드("\```") 시작점에 사용하는 언어를 선언하여 [문법강조(Syntax highlighting)](https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks#syntax-highlighting)이 가능하다.

<pre>
<code>
```java
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println("Hello, Honeymon");
  }
}
```
</code>
</pre>

```java
public class BootSpringBootApplication {
  public static void main(String[] args) {
    System.out.println("Hello, Honeymon");
  }
}
```


## 2.5. 수평선 ```<hr/>```
아래 줄은 모두 수평선을 만든다. 마크다운 문서를 미리보기로 출력할 때 *페이지 나누기* 용도로 많이 사용한다.

```
* * *

***

*****

- - -

---------------------------------------
```

* 적용예
* * *

***

*****

- - -

---------------------------------------


## 2.6. 링크
* 참조링크

```
[link keyword][id]

[id]: URL "Optional Title here"

// code
Link: [Google][googlelink]

[googlelink]: https://google.com "Go google"
```

Link: [Google][googlelink]

[googlelink]: https://google.com "Go google"

* 외부링크
```
사용문법: [Title](link)
적용예: [Google](https://google.com, "google link")
```
Link: [Google](https://google.com, "google link")

* 자동연결
```
일반적인 URL 혹은 이메일주소인 경우 적절한 형식으로 링크를 형성한다.

* 외부링크: <http://example.com/>
* 이메일링크: <address@example.com>
```

* 외부링크: <http://example.com/>
* 이메일링크: <address@example.com>

## 2.7. 강조
```
*single asterisks*
_single underscores_
**double asterisks**
__double underscores__
~~cancelline~~
```

* *single asterisks*
* _single underscores_
* **double asterisks**
* __double underscores__
* ~~cancelline~~

> ```문장 중간에 사용할 경우에는 **띄어쓰기** 를 사용하는 것이 좋다.```   
> 문장 중간에 사용할 경우에는 띄어쓰기를 사용하는 것이 좋다.


## 2.8. 이미지
```
![Alt text](/path/to/img.jpg)
![Alt text](/path/to/img.jpg "Optional title")
```
![석촌호수 러버덕](http://cfile6.uf.tistory.com/image/2426E646543C9B4532C7B0)
![석촌호수 러버덕](http://cfile6.uf.tistory.com/image/2426E646543C9B4532C7B0 "RubberDuck")

사이즈 조절 기능은 없기 때문에 ```<img width="" height=""></img>```를 이용한다.

예
```
<img src="/path/to/img.jpg" width="450px" height="300px" title="px(픽셀) 크기 설정" alt="RubberDuck"></img><br/>
<img src="/path/to/img.jpg" width="40%" height="30%" title="px(픽셀) 크기 설정" alt="RubberDuck"></img>
```

<img src="http://cfile6.uf.tistory.com/image/2426E646543C9B4532C7B0" width="450px" height="300px" title="px(픽셀) 크기 설정" alt="RubberDuck"></img><br/>
<img src="http://cfile6.uf.tistory.com/image/2426E646543C9B4532C7B0" width="40%" height="30%" title="%(비율) 크기 설정" alt="RubberDuck"></img>

## 2.9. 줄바꿈
3칸 이상 띄어쓰기(` `)를 하면 줄이 바뀐다.

```
* 줄 바꿈을 하기 위해서는 문장 마지막에서 3칸이상을 띄어쓰기해야 한다. 
이렇게

* 줄 바꿈을 하기 위해서는 문장 마지막에서 3칸이상을 띄어쓰기해야 한다.___\\ 띄어쓰기
이렇게
```

* 줄 바꿈을 하기 위해서는 문장 마지막에서 3칸이상을 띄어쓰기해야 한다. 이렇게

* 줄 바꿈을 하기 위해서는 문장 마지막에서 3칸이상을 띄어쓰기해야 한다.    \
이렇게


****
# 3. 마크다운 사용기
## 3.1. 위지윅(WSYWIG) 에디터
우리가 흔하게 접하는 웹에서 사용되는 에디터(네이버, 다음, 구글 등)이 대부분 위지윅 에디터에 속하며 기본적으로 HTML을 이용하여 스타일을 적용하여 문장을 꾸미는 형태를 취하게 된다. 그래서 하루패드와 같은 마크다운 에디터의 View 영역의 내용을 복사하여 붙여넣기를 하면 대체적으로 View영역에서 보이는 그대로 복사되는 편이다. 다만, 붙여넣기 이후에 문장들을 수정하려고 할 때 문제가 되는데, 이는 스타일이 포함된 태그가 수정과정에서 변형되면서 전체적인 영향을 끼치는 탓이다. 티스토리 블로그에서는 쉽지 않고... 워드프레스의 경우에는 마크다운으로 작성된 포스트를 HTML로 변환해주는 기능을 활용하는 것이 좋다.
결론은, **복사해서 붙여넣기하면 가급적이면 본문은 수정하지 않는 것이 좋다.**

## 3.2. 깃헙Github, 비트버킷Bitbucket과 요비Yobi 등
최근 유행하는 협업개발플랫폼의 경우에는 마크다운을 변환하는 컨버터 기능을 기본탑재하고 있기 때문에 마크다운 문법으로 작성한 텍스트를 그대로 복사해서 붙여넣거나 업로드하는 것만으로 마크다운의 적용이 가능하다.

## 3.3. MS워드 적용
View 영역의 항목을 그대로 붙여넣거나 HTML 내보내기 등으로 생성한 파일을 불러오는 형태로 사용가능하다. 적용한 헤더를 워드가 읽어드리면서 목차에 적용하기 때문에 이를 활용하면 목차까지도 손쉽게 적용이 가능해진다.

*****

# 4. 정리
마크다운은 기본문법만 알고있다면 일반 텍스트편집기에서도 손쉽게 작성이 가능한 마크업언어다. 현재 다양한 도구와 플랫폼에서 지원하고 있기 때문에 더욱 손쉽게 스타일적용된 문서를 작성할 수 있어 점점 널리 사용되고 있다.   

> 마크다운을 이해하고 사용하면서 쉽고 빠르게 스타일문서를 작성해보세요.

저는 Dropbox 프로를 구매해서 집-랩탑-스마트폰이 각각 연동을 시켜서 사용하고 있습니다. 드랍박스에 저장된 마크다운 문서는 Dropbox 웹서비스 상에서 제공하기 때문에 웹상에서 바로 열람할 수도 있어 링크를 걸어서 다른 사람과 공유하는 형식으로 사용하고 있다.
* 링크 예: [Markdown 설명](https://www.dropbox.com/s/mzp9tq4qtfjdlif/20141021_markdown_use_tip.md?dl=0)

***** 

# P.S.
최근에는 여러 기능이 포함되며 무거워지는[Notion](https://www.notion.so/product) 을 대신해서 [옵시디언(Obsidian)](https://obsidian.md/) 조금씩 사용중이다. Notion 에서 작성한 문서는 Atom(<https://atom.io/>), Visual Studio Code(<https://code.visualstudio.com/>), Notepad++(<https://notepad-plus-plus.org/>)텍스트 편집기에 복붙(복사하고 붙여넣기)하면 마크다운문법으로 작성된 문장이 기입되고 이지윅 에디터를 제공하는 웹에디터에 붙여넣기 하면 거의 완벽한 형태로 복사된다. 그래서 애용중이다.

## ○ 참고문서
* [78 Tools for writing and previewing Markdown](http://mashable.com/2013/06/24/markdown-tools/)
* [John gruber 마크다운 번역](http://nolboo.github.io/blog/2013/09/07/john-gruber-markdown/)
* [깃허브 취향의 마크다운 번역](http://nolboo.github.io/blog/2014/03/25/github-flavored-markdown/)
* [허니몬의 마크다운 작성법](http://www.slideshare.net/ihoneymon/ss-40575068)
* Notion.so(<https://www.notion.so/product>)
* Atom(<https://atom.io/>)
* Visual Studio Code(<https://code.visualstudio.com/>)
* Notepad++(<https://notepad-plus-plus.org/>)

-->]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[&lt;!–]]></summary></entry><entry><title type="html">SQLD</title><link href="http://localhost:4000/yongrok/update/SQLD/" rel="alternate" type="text/html" title="SQLD" /><published>2023-05-22T12:45:29+09:00</published><updated>2023-05-22T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/SQLD</id><content type="html" xml:base="http://localhost:4000/yongrok/update/SQLD/"><![CDATA[]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">NAS</title><link href="http://localhost:4000/yongrok/update/NAS/" rel="alternate" type="text/html" title="NAS" /><published>2023-05-22T12:45:29+09:00</published><updated>2023-05-22T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/NAS</id><content type="html" xml:base="http://localhost:4000/yongrok/update/NAS/"><![CDATA[]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">RaspberryPI</title><link href="http://localhost:4000/yongrok/update/RasperryPI/" rel="alternate" type="text/html" title="RaspberryPI" /><published>2023-04-26T12:45:29+09:00</published><updated>2023-04-26T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/RasperryPI</id><content type="html" xml:base="http://localhost:4000/yongrok/update/RasperryPI/"><![CDATA[<p>라즈베리파이 카메라 모듈을 사용하여 파이썬으로 사진을 찍는 코드는 다음과 같습니다.</p>

<p>import picamera
import time</p>

<p>with picamera.PiCamera() as camera:
    camera.resolution = (1024, 768) # 카메라 해상도 설정
    camera.start_preview() # 미리보기 화면 시작
    # 2초간 대기하여 카메라가 미리보기를 시작하도록 함
    time.sleep(10)
    camera.capture(‘image.jpg’) # 사진 촬영 후 파일로 저장</p>

<p>해당 코드에서는 picamera 모듈을 사용하여 라즈베리파이 카메라 모듈을 제어하고, resolution 속성으로 카메라 해상도를 설정합니다. 그리고 start_preview() 메서드로 미리보기 화면을 시작하고, capture() 메서드로 사진을 촬영하고 파일로 저장합니다.</p>

<p>추가적으로, time 모듈을 사용하여 사진을 찍기 전에 2초간 대기하여 카메라가 미리보기를 시작하도록 하였습니다.</p>

<p>라즈베리파이 카메라 모듈과 관련된 파이썬 코드에서 자주 사용되는 몇 가지 문법과 메서드를 소개합니다.</p>

<p>picamera.PiCamera() : 라즈베리파이 카메라 모듈을 사용하기 위한 객체 생성
camera.start_preview() : 라즈베리파이 카메라 모듈의 미리보기 화면 시작
camera.stop_preview() : 라즈베리파이 카메라 모듈의 미리보기 화면 종료
camera.capture(‘filename.jpg’) : 라즈베리파이 카메라 모듈로부터 이미지 캡처 및 저장
camera.resolution : 라즈베리파이 카메라 모듈의 해상도 설정
camera.brightness : 라즈베리파이 카메라 모듈의 밝기 설정
camera.contrast : 라즈베리파이 카메라 모듈의 명암 대비 설정
camera.sharpness : 라즈베리파이 카메라 모듈의 선명도 설정
camera.rotation : 라즈베리파이 카메라 모듈의 이미지 회전 설정
camera.annotate_text : 라즈베리파이 카메라 모듈의 미리보기 화면에 텍스트 추가
camera.annotate_text_size : 라즈베리파이 카메라 모듈의 미리보기 화면에 텍스트 크기 설정
camera.annotate_foreground : 라즈베리파이 카메라 모듈의 미리보기 화면에 텍스트 색상 설정
camera.annotate_background : 라즈베리파이 카메라 모듈의 미리보기 화면에 텍스트 배경 색상 설정
camera.annotate_text_width : 라즈베리파이 카메라 모듈의 미리보기 화면에 텍스트 가로폭 설정
camera.annotate_text_alpha : 라즈베리파이 카메라 모듈의 미리보기 화면에 텍스트 투명도 설정
위와 같은 문법과 메서드를 활용하여 라즈베리파이 카메라 모듈로부터 이미지를 캡처하고, 설정을 변경하며 미리보기 화면을 제어할 수 있습니다.</p>]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[라즈베리파이 카메라 모듈을 사용하여 파이썬으로 사진을 찍는 코드는 다음과 같습니다.]]></summary></entry><entry><title type="html">Imformation</title><link href="http://localhost:4000/yongrok/update/Imfomation/" rel="alternate" type="text/html" title="Imformation" /><published>2023-04-22T12:45:29+09:00</published><updated>2023-04-22T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/Imfomation</id><content type="html" xml:base="http://localhost:4000/yongrok/update/Imfomation/"><![CDATA[]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html"></title><link href="http://localhost:4000/yongrok/update/%EB%AA%85%EC%96%B8/" rel="alternate" type="text/html" title="" /><published>2023-02-18T12:45:29+09:00</published><updated>2023-02-18T12:45:29+09:00</updated><id>http://localhost:4000/yongrok/update/%EB%AA%85%EC%96%B8</id><content type="html" xml:base="http://localhost:4000/yongrok/update/%EB%AA%85%EC%96%B8/"><![CDATA[<h1 id="유튜브-좋은-글귀-명언-단어">유튜브 좋은 글귀, 명언, 단어</h1>

<ul>
  <li>
    <p>경제
  기준금리 : 
  작은 소비에 중독된다. - 개그맨 황현희
  내가 잘 때 돈을 벌어다 줄 무언가 필요하다. 그게 없다면 평생 일을 해야한다. - 워렌 버핏
  과시하는 것은 의미가 없다.
  양떼 효과(Herding Effect) : 주식 투자에서 처음으로 사용된 용어로, 투자자가 주식을 거래하는 과정에서 학습과 모방을 통해 맹목적으로 다른 사람을 따라 하는 것을 의미한다.</p>
  </li>
  <li>
    <p>공부
  개관사정 : 끝날 때 까지 끝난게 아니다.
  용두사미 : 용의 꼬리가 될 빠에 뱀의 머리가 되겠다.
  천사가 두려워 하는 곳에 바보가 달려든다. - 알렉산더 포프
  모든 파도가 기회다. - 서핑선수 마크 샌번
  알을 깨고 나와야 병아리, 남이 깨면 계란 후라이가 된다. 스스로 깨고 나와라 - 김영곤 교수님</p>
  </li>
  <li>
    <p>연애
  하이퍼 가미 : 힌두교에서 나오는 말로 ‘여자는 상대적으로 자기보다 위의 신분인 남자를 원한다’는 뜻
  남자가 할 수 있는 일을 하고 여자는 여자가 할 수 있는 일을 해야한다. - 남성연대 배성규
  여자는 옷장에 옷이 많아도 입을 옷이 없다고 한다. 남자가 옷이 없다는 말은 진짜 없는 것이다. - 유튜버 권승현</p>
  </li>
  <li>
    <p>사람
  무식한 사람이 신념을 가지면 무섭다. 부지런까지 하면 주위 사람이 피곤하다. - 이경규
  너 자신을 알라 - 소크라테스
  조언은 상대적이다. 상대적으로 자기보다 아래라거 생각하는 사람한테 조언한다. - 흑자헬스
  운동과 공부는 재능이다. 처음 했을 때, 남들보다 잘하면 재미를 느낀다. 그게 재능이다. - 흑자헬스
  사람마다 가지고 있는 환경이 다르다. 남들을 내 기준으로 쉽게 평가하면 안된다. 그들은 그들 나름대로 노력하고 있을 수 있다. - 흑자헬스</p>
  </li>
</ul>]]></content><author><name>Your Name</name></author><category term="yongrok" /><category term="update" /><summary type="html"><![CDATA[유튜브 좋은 글귀, 명언, 단어]]></summary></entry></feed>